{"name": "Создание заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/feed\">...</a> is not clickable at point (598, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=131.0.6778.86)\nStacktrace:\n\tGetHandleVerifier [0x00BB3433+25059]\n\t(No symbol) [0x00B3CE34]\n\t(No symbol) [0x00A1BEC3]\n\t(No symbol) [0x00A65D37]\n\t(No symbol) [0x00A64189]\n\t(No symbol) [0x00A61DAD]\n\t(No symbol) [0x00A610AF]\n\t(No symbol) [0x00A55FD7]\n\t(No symbol) [0x00A81EFC]\n\t(No symbol) [0x00A55A24]\n\t(No symbol) [0x00A82194]\n\t(No symbol) [0x00A9B51E]\n\t(No symbol) [0x00A81C96]\n\t(No symbol) [0x00A53FAC]\n\t(No symbol) [0x00A54F3D]\n\tGetHandleVerifier [0x00EA5593+3113795]\n\tGetHandleVerifier [0x00EBA25A+3198986]\n\tGetHandleVerifier [0x00EB2A32+3168226]\n\tGetHandleVerifier [0x00C532A0+680016]\n\t(No symbol) [0x00B4577D]\n\t(No symbol) [0x00B42A28]\n\t(No symbol) [0x00B42BC5]\n\t(No symbol) [0x00B35820]\n\tBaseThreadInitThunk [0x76347BA9+25]\n\tRtlInitializeExceptionChain [0x77A6C0CB+107]\n\tRtlClearBits [0x77A6C04F+191]", "trace": "self = <test_main_functionality.TestConstructorAndFeed object at 0x00000285775DB1D0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"28fdbf0a2d1307cd50e5fc7c5e3a8c8a\")>\ntest_data = {'email': 'ArtemBarrel@yandex.ru', 'password': '123456'}\n\n    @allure.title(\"Создание заказа\")\n    def test_create_order(self, browser,test_data):\n        login_page = LoginPage(browser)\n        personal_account_page = PersonalAccountPage(browser)\n        feed_page = FeedPage(browser)\n        personal_account_page.login(test_data[\"email\"], test_data[\"password\"])\n>       feed_page.open_feed()\n\ntests\\test_main_functionality.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\FeedPage.py:21: in open_feed\n    feed_link.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000028574DF9BE0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...dInitThunk [0x76347BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77A6C0CB+107]\\\\n\\\\tRtlClearBits [0x77A6C04F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/feed\">...</a> is not clickable at point (598, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=131.0.6778.86)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00BB3433+25059]\nE       \t(No symbol) [0x00B3CE34]\nE       \t(No symbol) [0x00A1BEC3]\nE       \t(No symbol) [0x00A65D37]\nE       \t(No symbol) [0x00A64189]\nE       \t(No symbol) [0x00A61DAD]\nE       \t(No symbol) [0x00A610AF]\nE       \t(No symbol) [0x00A55FD7]\nE       \t(No symbol) [0x00A81EFC]\nE       \t(No symbol) [0x00A55A24]\nE       \t(No symbol) [0x00A82194]\nE       \t(No symbol) [0x00A9B51E]\nE       \t(No symbol) [0x00A81C96]\nE       \t(No symbol) [0x00A53FAC]\nE       \t(No symbol) [0x00A54F3D]\nE       \tGetHandleVerifier [0x00EA5593+3113795]\nE       \tGetHandleVerifier [0x00EBA25A+3198986]\nE       \tGetHandleVerifier [0x00EB2A32+3168226]\nE       \tGetHandleVerifier [0x00C532A0+680016]\nE       \t(No symbol) [0x00B4577D]\nE       \t(No symbol) [0x00B42A28]\nE       \t(No symbol) [0x00B42BC5]\nE       \t(No symbol) [0x00B35820]\nE       \tBaseThreadInitThunk [0x76347BA9+25]\nE       \tRtlInitializeExceptionChain [0x77A6C0CB+107]\nE       \tRtlClearBits [0x77A6C04F+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Открываем базовый URL", "status": "passed", "start": 1733313173749, "stop": 1733313193637}, {"name": "Переход в личный кабинет", "status": "passed", "start": 1733313193637, "stop": 1733313193709}, {"name": "Ввод email: 'ArtemBarrel@yandex.ru'", "status": "passed", "parameters": [{"name": "email", "value": "'ArtemBarrel@yandex.ru'"}], "start": 1733313193709, "stop": 1733313193778}, {"name": "Ввод пароля", "status": "passed", "parameters": [{"name": "password", "value": "'123456'"}], "start": 1733313193778, "stop": 1733313193825}, {"name": "Клик на кнопку 'Войти'", "status": "passed", "start": 1733313193825, "stop": 1733313193883}, {"name": "Переход на страницу Ленты заказов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/feed\">...</a> is not clickable at point (598, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=131.0.6778.86)\nStacktrace:\n\tGetHandleVerifier [0x00BB3433+25059]\n\t(No symbol) [0x00B3CE34]\n\t(No symbol) [0x00A1BEC3]\n\t(No symbol) [0x00A65D37]\n\t(No symbol) [0x00A64189]\n\t(No symbol) [0x00A61DAD]\n\t(No symbol) [0x00A610AF]\n\t(No symbol) [0x00A55FD7]\n\t(No symbol) [0x00A81EFC]\n\t(No symbol) [0x00A55A24]\n\t(No symbol) [0x00A82194]\n\t(No symbol) [0x00A9B51E]\n\t(No symbol) [0x00A81C96]\n\t(No symbol) [0x00A53FAC]\n\t(No symbol) [0x00A54F3D]\n\tGetHandleVerifier [0x00EA5593+3113795]\n\tGetHandleVerifier [0x00EBA25A+3198986]\n\tGetHandleVerifier [0x00EB2A32+3168226]\n\tGetHandleVerifier [0x00C532A0+680016]\n\t(No symbol) [0x00B4577D]\n\t(No symbol) [0x00B42A28]\n\t(No symbol) [0x00B42BC5]\n\t(No symbol) [0x00B35820]\n\tBaseThreadInitThunk [0x76347BA9+25]\n\tRtlInitializeExceptionChain [0x77A6C0CB+107]\n\tRtlClearBits [0x77A6C04F+191]\n\n", "trace": "  File \"C:\\Users\\Artem\\Desktop\\Diplom\\Dp3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Artem\\Desktop\\Diplom\\Dp3\\pages\\FeedPage.py\", line 21, in open_feed\n    feed_link.click()\n  File \"C:\\Users\\Artem\\Desktop\\Diplom\\Dp3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Artem\\Desktop\\Diplom\\Dp3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Artem\\Desktop\\Diplom\\Dp3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Artem\\Desktop\\Diplom\\Dp3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1733313193883, "stop": 1733313194986}], "parameters": [{"name": "browser", "value": "'firefox'"}], "start": 1733313173749, "stop": 1733313194988, "uuid": "63101f71-4177-45ff-9981-af2926290f40", "historyId": "0720a259f82762d247c764f94ce2247a", "testCaseId": "913dbf916266c0c70797bd41dfc91632", "fullName": "tests.test_main_functionality.TestConstructorAndFeed#test_create_order", "labels": [{"name": "feature", "value": "Переходы: Конструктор и Лента заказов"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functionality"}, {"name": "subSuite", "value": "TestConstructorAndFeed"}, {"name": "host", "value": "DESKTOP-BEKDSUT"}, {"name": "thread", "value": "12328-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functionality"}]}